# this is a comment (ignored)
# these lines are the image files followed by duration
# they will be played in the order given
../Screenshots/Managing_your_business_transactions/slide01.jpg,00:05
#Managing your business transactions
#
../Screenshots/Managing_your_business_transactions/slide02.jpg,00:13
#Without any configuration effort on your end, AppDynamics auto-discovers and organizes application traffic into Business Transactions. 
#
../Screenshots/Managing_your_business_transactions/slide03.jpg,00:23
#Activities within your application are aligned with the primary functions of a web business, so when you see performance issues you will know immediately which business functions are involved.
# 
../Screenshots/Managing_your_business_transactions/slide04.jpg,00:31
#In this video, we will take it a step further and configure your Business Transaction sets to optimize your monitoring settings.
#
../Screenshots/Managing_your_business_transactions/slide05.jpg,00:43
#What do we mean by optimizing?  We are going to modify the Business transaction set so you only have the critical business transactions visible, so that everyone can easily find the business transactions that are of interest to them.
#
../Screenshots/02-business_transactions/BTList02-2.jpg,01:15
#Here we are looking at the list of business transactions auto-discovered by AppDynamics. By default, AppDynamics tracks up to 200 business transactions per application, and 50 per agent.  This default limit works as a "sanity check" to prevent uncontrolled business transaction explosions due to a misconfiguration, but they can be changed if needed.  So with a default of up to 200 transactions, you may have quite a few when you start. They are all named using the default naming rule, which grabs the first two levels of the URI.
#
../Screenshots/Managing_your_business_transactions/slide06.jpg,01:22
#At this stage, you probably have some “low-impact” business transactions that you do not really need to monitor, or be alerted about.
#
../Screenshots/Managing_your_business_transactions/slide07.jpg,01:28
#Moreover, the default names given by AppDynamics probably do not match the names you use internally.
#
../Screenshots/Managing_your_business_transactions/slide08.jpg,01:34
#Let’s take care of the first problem.  We are going to trim down the default list to something more manageable.  
#
../Screenshots/Managing_your_business_transactions/slide09.jpg,01:44
#To identify the business critical set of transactions, meet with all of the stakeholders. Ask each team using AppDynamics what processes are important to them. 
#
../Screenshots/Managing_your_business_transactions/slide10.jpg,01:51
#The developer and operations team will probably give you a different set of critical business transactions than the network or DBA team. 
#
../Screenshots/Managing_your_business_transactions/slide11.jpg,01:54
#So make sure to talk to all stakeholder groups.
#
../Screenshots/02-business_transactions/BTList_sorted_by_calls01-1.jpg,02:22
#A best practice tip here is to make sure all the high frequency transactions are covered.  Here is the list sorted by the call count.  If no one mentioned one of the high frequency transactions, you may want to check with the teams to see if anyone is interested in the metrics of that transaction.  Also the business transactions at the bottom are invoked so infrequently, chances are they are not critical to your business.  Trimming down this “noise” may make it easier for teams to pick out the business transactions they want to see.  
#
../Screenshots/Managing_your_business_transactions/slide12.jpg,02:31
#As each team lists their key business transactions, ask them to name those transactions.  That way, we can rename the default names to something more meaningful.
#
../Screenshots/Managing_your_business_transactions/slide07.jpg,02:35
#That way there should be less miscommunication about the various business transactions.
#
../Screenshots/Managing_your_business_transactions/slide13.jpg,03:00
#Once we collect the information we need from our stakeholders, we can start optimizing the list.  Specifically, we are going to perform the following tasks.
#Change the auto-discovery setting
#Rename transactions
#Group multiple transactions 
#Remove non-critical transactions
#And finally, custom-create business transactions based on custom-match rules
#Let’s take a look at each task from the top.
#
../Screenshots/Managing_your_business_transactions/slide14.jpg,03:04
#Change the Autodiscovery setting
#
../Screenshots/Managing_your_business_transactions/slide15.jpg,03:15
#For transactions that begin with a web request, by default AppDynamics uses the first two segments of the URI to group these requests into transactions.  So while these will be recognized as different transactions, 
#
../Screenshots/Managing_your_business_transactions/slide16.jpg,03:25
#these will be grouped together the same transaction as the third level will be ignored. But what if you wanted to track them separately? Let’s consider this scenario: 
#
../Screenshots/Managing_your_business_transactions/slide17.jpg,03:33
#The team in charge of the mz-ui tier says they want to track all these transactions separately. This is easy to accommodate, let me show you.
#
../Screenshots/08-configure/Instrumentation_mz_ui01-1.jpg,03:37
#We are in the Instrumentation section under Configure.  
#
../Screenshots/08-configure/Instrumentation_mz_ui01-2.jpg,03:42
#These transactions originate in the mz-ui tier, so we selected that.
#
../Screenshots/08-configure/Instrumentation_mz_ui01-3.jpg,03:47
#Check Use 'Custom Configuration for this Tier', and you will see all the options. 
#
../Screenshots/08-configure/Instrumentation_mz_ui01-4.jpg,03:51
#We are going to use the Configure Naming option for Servlet.
#
../Screenshots/08-configure/Instrumentation_mz_ui02-1.jpg,03:57
#So, we just changed the default setting from 2 to 3 to make it use the first 3 levels of the URI.  
#
../Screenshots/Managing_your_business_transactions/slide17.jpg,04:09
#Now all these Business Transactions - report, rating, customer, rent...will be treated as separate business transactions.  Now the mz_ui team can easily see the metrics for each.
#
../Screenshots/Managing_your_business_transactions/slide18.jpg,04:12
#Rename transactions
#
../Screenshots/Managing_your_business_transactions/slide07.jpg,04:24
#You want to make sure everyone knows what each Business Transaction does.  So it might be helpful to rename the default transaction names assigned by AppDynamics. The renaming option is available under the More Actions button.
#
../Screenshots/Managing_your_business_transactions/slide19.jpg,04:27
#Group multiple transactions
#
../Screenshots/Managing_your_business_transactions/slide20.jpg,04:37
#Let’s say one of the teams is tracking the account update activities. Currently we have multiple Business transactions for that such as admin-customer transaction and the admin-account transaction.
#
../Screenshots/Managing_your_business_transactions/slide21.jpg,04:50
#The request is to have the bundled metrics readily available, while at the same time keeping the option to drill down and view metrics per individual business transactions if needed. Grouping transactions let you do just that.
#
../Screenshots/02-business_transactions/BTgroup01-1.jpg,04:56
#Here we are looking at the Business Transactions list.  First highlight the ones you want to bundle. 
#
../Screenshots/02-business_transactions/More_actions02-2.jpg,04:59
#Then go to More Actions, and choose Create Group.
#
../Screenshots/02-business_transactions/BTgroup03-1.jpg,05:05
#Provide a name for the group, in our case we will call it 'Account Activities', and save.
#
../Screenshots/02-business_transactions/BTgroup04-1.jpg,05:12
#These transactions will still be available in the business transactions list, but will also be included in the new group. 
#
../Screenshots/02-business_transactions/BTgroup05-1.jpg,05:17
#When you drill down into the group, you can still see the metrics for the two business transactions separately.  
#
../Screenshots/Managing_your_business_transactions/slide22.jpg,05:20
#Removing Transactions
#
../Screenshots/Managing_your_business_transactions/slide23.jpg,05:27
#There are lots of business transactions that none of the teams are interested in monitoring.  These can be removed from the list to avoid distraction.
#
../Screenshots/02-business_transactions/More_actions02-3.jpg,05:50
#Simply highlight the business transaction you do not want, and choose 'Exclude' under 'More Actions'. The transaction disappears and will not be tracked going forward.  Notice that we also have the 'Delete' option, but while this will delete the past record, it will not prevent AppDynamics from re-discovering this transaction.  Delete is a convenient feature to “refresh” the list after you make changes. 
#
../Screenshots/Managing_your_business_transactions/slide24.jpg,05:54
#Set up custom rules to find transactions
#
../Screenshots/Managing_your_business_transactions/slide17.jpg,06:10
#You can create custom rules to pick up transactions that match the criteria.  Here is an example use case: earlier we expanded the discovery criteria to use 3 levels of a transaction's URI. In that case it worked well as the team wanted to track all of those transactions separately.
#
../Screenshots/Managing_your_business_transactions/slide25.jpg,06:31
#But what if you do not want to change the tier-wide discovery setting?  Maybe you only want to go to the 3rd level for just one transaction.  Here is a scenario. Default mz-ui/customer business transaction includes all these variations.  Amongst those, you want to track the Rate transaction separately while leaving the rest in the default setting. How do we do that?
#
../Screenshots/08-configure/Custom_match01-1.jpg,06:39
#Setting up custom match rules makes this possible.  Let’s try one. We are now on the Instrumentation page under configure. 
#
../Screenshots/08-configure/Custom_match01-2.jpg,06:49
#Select the right Tier, scroll down, and you will see the Custom Match Rules section to set up a custom discovery rule.  Click + to add a new rule.
#
../Screenshots/08-configure/Custom_match02-1.jpg,06:58
#Choose servlet and you will get this window.  Name this transaction “Rate”, and leave the priority as “0”.
#
../Screenshots/08-configure/Custom_match02-2.jpg,07:06
#The rest is easy.  Check URI, and enter the correct URI information. Save this setting and now you will have the custom discovered transaction!
#
../Screenshots/Managing_your_business_transactions/slide26.jpg,07:23
#The priority is an important concept so let me explain.  As you already know, the default auto discovery setting uses the first 2 levels of the transaction's URI. So the rate transaction could be included in the auto discovered “mz-ui/customer” transaction or our new Match Rule.
#
../Screenshots/Managing_your_business_transactions/slide27.jpg,07:35
#The question then is, where will the transaction end up?  In our new custom 'Rate' transaction or in the default auto discovery setting?  The answer is the new custom match rule will get it. 
#
../Screenshots/Managing_your_business_transactions/slide28.jpg,07:52
#It works like this.  Custom Match rules are processed first, so they have priority.  Next, Excluded Transactions are processed.  Then lastly, auto discovered transactions are processed.  So back to our question, because custom match rules are processed first, the transaction will end up in our new match rule.
#
../Screenshots/Managing_your_business_transactions/slide29.jpg,08:11
#What if we had more than one custom match rule that a transaction could fit in?  By setting the priority of a custom match rule, you have complete control over which match rule will win out.  The higher you set the priority number, the higher the priority.  The higher priority will always get the transaction over a lower.  
#
../Screenshots/Managing_your_business_transactions/slide13.jpg,08:18
#Now you know how to perform all these tasks, and by doing so you can optimize your monitoring settings.  Thanks for watching!
#
../Audio/Managing_your_business_transactions.mp3
